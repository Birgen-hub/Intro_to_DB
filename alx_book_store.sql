-- FILE NAME: alx_book_store.sql
-- Description: Creates the database schema for the online bookstore, ensuring all constraints and IF NOT EXISTS syntax are correct, using the required lowercase database name.

-- Force drop the database to ensure a clean slate
DROP DATABASE IF EXISTS alx_book_store;

-- REQUIRED: Create the database using the IF NOT EXISTS syntax and lowercase name
CREATE DATABASE IF NOT EXISTS alx_book_store;
USE alx_book_store;

-- 1. CREATE AUTHORS TABLE
CREATE TABLE Authors (
    AUTHOR_ID INT NOT NULL,
    AUTHOR_NAME VARCHAR(215) NOT NULL,
    PRIMARY KEY (AUTHOR_ID)
);

-- 2. CREATE BOOKS TABLE
CREATE TABLE Books (
    BOOK_ID INT NOT NULL,
    TITLE VARCHAR(130) NOT NULL,
    AUTHOR_ID INT,
    PRICE DOUBLE NOT NULL,
    PUBLICATION_DATE DATE,
    PRIMARY KEY (BOOK_ID),
    FOREIGN KEY (AUTHOR_ID) REFERENCES Authors(AUTHOR_ID)
);

-- 3. CREATE CUSTOMERS TABLE
CREATE TABLE Customers (
    CUSTOMER_ID INT NOT NULL,
    CUSTOMER_NAME VARCHAR(215) NOT NULL,
    EMAIL VARCHAR(215) NOT NULL UNIQUE,
    ADDRESS TEXT,
    PRIMARY KEY (CUSTOMER_ID)
);

-- 4. CREATE ORDERS TABLE
CREATE TABLE Orders (
    ORDER_ID INT NOT NULL,
    CUSTOMER_ID INT,
    ORDER_DATE DATE NOT NULL,
    PRIMARY KEY (ORDER_ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES Customers(CUSTOMER_ID)
);

-- 5. CREATE ORDER_DETAILS TABLE
CREATE TABLE Order_Details (
    ORDERDETAILID INT NOT NULL,
    ORDER_ID INT,
    BOOK_ID INT,
    QUANTITY DOUBLE NOT NULL,
    PRIMARY KEY (ORDERDETAILID),
    FOREIGN KEY (ORDER_ID) REFERENCES Orders(ORDER_ID),
    FOREIGN KEY (BOOK_ID) REFERENCES Books(BOOK_ID)
);
